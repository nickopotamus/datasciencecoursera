pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 2],
ToothGrowth$len[ToothGrowth$dose == 0.5]) %>%
tidy %>%
mutate(
null_hypothesis = 'µ2mg - µ0.5mg = 0'
) %>%
select(9, 1:8) %>%
bind_rows(pairwise_results, .)
pairwise_results
pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 1],
ToothGrowth$len[ToothGrowth$dose == 0.5]) %>%
tidy %>%
mutate(
null_hypothesis = 'µ1mg - µ0.5mg = 0'
) %>%
select(9, 1:8) %>%
bind_rows(pairwise_results, .)
print.data.frame(pairwise_results)
pairwise_results
pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 2],
ToothGrowth$len[ToothGrowth$dose == 1]) %>%
tidy %>%
mutate(
null_hypothesis = "µ2mg - µ1mg = 0"
)
pairlist()
pairwise_results
?select
pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 2],
ToothGrowth$len[ToothGrowth$dose == 1]) %>%
tidy %>%
mutate(
null_hypothesis = "µ2mg - µ1mg = 0"
) %>%
select(9, 1:9)
pairwise_results
?select
pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 2],
ToothGrowth$len[ToothGrowth$dose == 1]) %>%
tidy %>%
mutate(
null_hypothesis = "µ2mg - µ1mg = 0"
)
pairwise_results
pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 2],
ToothGrowth$len[ToothGrowth$dose == 1]) %>%
tidy %>%
mutate(
null_hypothesis = "µ2mg - µ1mg = 0"
) %>%
select(9, 1:12)
pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 2],
ToothGrowth$len[ToothGrowth$dose == 1]) %>%
tidy %>%
mutate(
null_hypothesis = "µ2mg - µ1mg = 0"
) %>%
select(9, 1:11)
pairwise_results
pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 2],
ToothGrowth$len[ToothGrowth$dose == 1]) %>%
tidy %>%
mutate(
null_hypothesis = "µ2mg - µ1mg = 0"
) %>%
select(1:12)
pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 2],
ToothGrowth$len[ToothGrowth$dose == 1]) %>%
tidy %>%
mutate(
null_hypothesis = "µ2mg - µ1mg = 0"
) %>%
select(1:11)
pairwise_results
pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 2],
ToothGrowth$len[ToothGrowth$dose == 1]) %>%
tidy %>%
mutate(
null_hypothesis = "µ2mg - µ1mg = 0"
)
pairwise_results
pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 2],
ToothGrowth$len[ToothGrowth$dose == 1]) %>%
tidy %>%
mutate(
null_hypothesis = "µ2mg - µ1mg = 0"
) %>%
select(11,7,8,6)
pairwise_results
pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 2],
ToothGrowth$len[ToothGrowth$dose == 1]) %>%
tidy %>%
mutate(
null_hypothesis = "µ2mg - µ1mg = 0"
) %>%
select(11,7,8,5)
pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 2],
ToothGrowth$len[ToothGrowth$dose == 0.5]) %>%
tidy %>%
mutate(
null_hypothesis = 'µ2mg - µ0.5mg = 0'
) %>%
select(11,7,8,5) %>%
bind_rows(pairwise_results, .)
pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 1],
ToothGrowth$len[ToothGrowth$dose == 0.5]) %>%
tidy %>%
mutate(
null_hypothesis = 'µ1mg - µ0.5mg = 0'
) %>%
select(11,7,8,5) %>%
bind_rows(pairwise_results, .)
print.data.frame(pairwise_results)
pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 2],
ToothGrowth$len[ToothGrowth$dose == 1]) %>%
tidy %>%
mutate(
null_hypothesis = "µ2mg - µ1mg = 0"
)
pairwise_results
pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 2],
ToothGrowth$len[ToothGrowth$dose == 1]) %>%
tidy %>%
mutate(
null_hypothesis = "µ2mg - µ1mg = 0"
) %>%
select(11,4,7,8,5)
pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 2],
ToothGrowth$len[ToothGrowth$dose == 0.5]) %>%
tidy %>%
mutate(
null_hypothesis = 'µ2mg - µ0.5mg = 0'
) %>%
select(11,4,7,8,5) %>%
bind_rows(pairwise_results, .)
pairwise_results <- t.test(ToothGrowth$len[ToothGrowth$dose == 1],
ToothGrowth$len[ToothGrowth$dose == 0.5]) %>%
tidy %>%
mutate(
null_hypothesis = 'µ1mg - µ0.5mg = 0'
) %>%
select(11,4,7,8,5) %>%
bind_rows(pairwise_results, .)
print.data.frame(pairwise_results)
tidy(t_diff_supp <- t.test(len ~ supp, ToothGrowth, var.equal = FALSE))
setwd("~/Dropbox/git/datasciencecoursera")
install.packages("UsingR")i
install.packages("UsingR")
library(UsingR);data(galton)
par(mfrow=c(1,2))
hist(galton$child,col="blue",breaks=100)
hist(galton$parent,col="blue",breaks=100)
library(manipulate)
myHist<-function(mu){
hist(galton$child,col="blue",breaks=100)
lines(c(mu,mu),c(0,150),col="red",lwd=5)
mse<-mean((galton$child-mu)^2)
text(63,150,paste("mu=",mu))
text(63,140,paste("MSE=",round(mse,2)))
}
manipulate(myHist(mu),mu=slider(62,74,step=0.5))
install.packages("manipulate")
library(manipulate)
myHist<-function(mu){
hist(galton$child,col="blue",breaks=100)
lines(c(mu,mu),c(0,150),col="red",lwd=5)
mse<-mean((galton$child-mu)^2)
text(63,150,paste("mu=",mu))
text(63,140,paste("MSE=",round(mse,2)))
}
manipulate(myHist(mu),mu=slider(62,74,step=0.5))
hist(galton$child,col="blue",breaks=100)
meanChild<-mean(galton$child)
lines(rep(meanChild,100),seq(0,150,length=100),col="red",lwd=5)
par(mfrow=c(1,1))
hist(galton$child,col="blue",breaks=100)
meanChild<-mean(galton$child)
lines(rep(meanChild,100),seq(0,150,length=100),col="red",lwd=5)
plot(galton$parent,galton$child,pch=19,col="blue")
myPlot<-function(beta){
y<-galton$child-mean(galton$child)
x<-galton$parent-mean(galton$parent)
freqData<-as.data.frame(table(x,y))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((y-beta*x)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(0.6,1.2,step=0.02))
lm(I(child-mean(child))~I(parent-mean(parent))-1,data=galton)
install_from_swirl("Regression Models")
library(swirl)
install_from_swirl("Regression Models")
swirl()
plot(child~parent, galton)
plot(jitter(child,4)~parent, galton)
regline <- lm(child~parent, galton)
regrline <- lm(child~parent, galton)
abline(regrline, lwd=3, col="red")
summary(regrline)
fit <- lm(child~parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs-rhs
all.equal(lhs,rhs)
varChild <- van(galton$child)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(ols.slope,ols.ic))
all.equal(varChild, (varRes+varEst))
all.equal(varChild, varRes+varEst)
efit <- lm(accel~mag+dist, atteny)
efit <- lm(accel~mag+dist, attenu)
mean(2)
mean(efit$residuals)
cov(efit$residuals,attenu$mag)
cov(efit$residuals,attenu$dist)
cor(gpa_nor,gch_nor)
l_nor <- lm(gch~gpa)
l_nor <- lm(gch_nor~gpa_nor)
fit <- lm(child~parent, galton)
sqrt(sum(fit$residuals)/n-2)
sqrt(sum(fit$residuals^2)/(n-2)
)
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum((galton$child - mu)^2)
sRes <- deviance(2)
sRes <- deviance()
?deviance
sRes <- deviance(sum(galton$child-fit))
sRes <- deviance(sum(galton$child-fit$residuals))
2+4
sRes <- deviance(fit)
1 - sRes/sTot
summary(fit)$r.squared
cor(galton$child,galton$parent)^2
ones <- rep(1, nrow(galton))
lm(child ~ ones+parent-1, galton)
lm(child ~ parent, galton)
lm(child~1, galton)
head(trees)
fit <- lm(Volume~Girth+Height+Constant-1, trees)
trees2 <- elimnate("Girth", trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume~Height+Constant-1, trees2)
lapply(list(fit, fit2), coef)
all <- lm(fertility~.,data="swiss")
all <- lm(fertility~.,data=swiss)
all <- lm(Fertility~.,data=swiss)
summary(all)
summary(lm(Fertility~agriculture,data=swiss))
summary(lm(Fertility~Agriculture,data=swiss))
cor(Examination~Education, data=swiss)
?co
?cor
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
ec = swiss$Examination+swiss$Catholic
ec <- swiss$Examination+swiss$Catholic
efit <- lm(Fertility~.+ec, data=swiss)
coef(all)-coef(efit)
all$coefficients-efit$coefficients
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
coefTable <- coef(summary(fit))
(pval <- coefTable[2, 4])
summary(fit)
coefTable
swirl()
6
dim(InsectSprays)
head(InsectSprays,15)
sA
summary(InsectSprays[,2])
sapply(InsectSprays,2,class)
2
sapply(InsectSprays,class)
lm(count~spray,data=InsectSprays)
fit <- lm(count~spray,data=InsectSprays)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sprayB)
mean(sB)
nfit <- lm(count~spray-1,data=InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count~spray-1,data=InsectSprays)
fit2 <- lm(count~spray2,data=InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[2]-fit$coef[3])/1.6011
dim(hunger)
948
names(hunger)
fit <- lm(hunger~Year, hunger)
fit <- lm(Numeric~Year, hunger)
summary(fit)$coef
lmf <- lm(Numerics[hunger$Sex=="Female"]~Year[hunger$Sex=="Female"], hunger)
lmf <- lm(Numeric[hunger$Sex=="Female"]~Year[hunger$Sex=="Female"], hunger)
lmF <- lm(Numeric[hunger$Sex=="Female"]~Year[hunger$Sex=="Female"], hunger)
lmM <- lm(Numeric[hunger$Sex=="Male"]~Year[hunger$Sex=="Male"], hunger)
lmBoth <- lm(Numeric~Year+Sex,hunger)
summary(lmBoth)
lmInter <- lm(Numeric~Year+Sex+Sex*Year,hunger)
summary(lmInter)
fit <- lm(y~x, out2)
plot(fit,which=1)
fitno <- lm(y~x, out2[-1,])
plot(fitno,which=1)
coef(fit)-coef(fitno)
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
summary(fit)
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd =1
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit, which=2)
sigma1
sigma1 =1
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
dy =1
dy <- predict(fitno, out2)-predict(fit, out2)
dy =1
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility~., swiss)
vif(mdl)
mdl2 <- lm(Fertility~.-Examination, swiss)
vif(mdl2)
simbias()
x1c <- simbias()
means(x1c)
mean(x1c)
apply(x1c,1,mean)
fit1 <- lm(Fertility~Agriculture, swiss)
fit3 <- lm(Fertility~Agriculture+Examination+Education, swiss)
anova(fi1,fit3)
anova(fit1,fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- deviance(fit1)-deviance(fit3)
n <- deviance(fit1)-deviance(fit3)/2
n <- (deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d, 2, 43, lower.tail = F)
pf(n/d, 2, 43, lower.tail = FALSE)
shapiro.test(fit3$residuals)
anova(fit1,fit3,fit5,fit6)
View(ravenData)
mdl <- glm(ravenWinNum~ravenScote, binomial, ravenData)
mdl <- glm(ravenWinNum~ravenScore, binomial, ravenData)
lodds <- predic(mdl, data.fram(ravenScote=c(0,3,6)))
lodds <- predicr(mdl, data.fram(ravenScote=c(0,3,6)))
lodds <- predict(mdl, data.fram(ravenScote=c(0,3,6)))
lodds <- predict(mdl, data.frame(ravenScote=c(0,3,6)))
lodds<-predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95,1)
var(rpois(1000,50))
nxt()
head(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits~date,poisson, hits)
summary(mdl)
confint(mdl,'date')
exp(confint(mdl,'date'))
which.max(hits[,'visits'])
hits[704,]
lambda <- mdl$fitted.values[704]
apos(.95, lambda)
qpois(.95, lambda)
mdl2 <- glm(visits~date,poisson, hits, offset=log(visits+1))
mdl2 <- glm(simplystats~date, poisson, hits, offset=log(visits+1))
qpois(.95, mdl2$fitted.values[704])
setwd("~/Dropbox/git/datasciencecoursera/7_Regression_Models")
fit <- lm(mpg ~ am, data = mtcars)
summary(fit)
data(mtcars)
view(mtc)
view(mtcars)
View(mtcars)
plot(mtcars)
boxplot(mpg ~ am, data = mtcars,
xlab="Transmission (0 = automatic, 1 = manual)",
ylab="Miles/(US) gallon",
main="MPG vs Transmission")
fit <- lm(mpg ~ am, data = mtcars)
summary(fit)
plot(fit)
plot(fit,which=1)
plot(fit,which=0)
plot(fit,which=2)
plot(fit,which=3)
plot(fit,which=4)
plot(fit,which=5)
plot(fit,which=6)
all_fit <- lm(mpg ~ ., data = mtcars)
summary(all_fit)
summary(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs, labels=c("V-engine", "Straight engine"))
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
mtcars$am <- factor(mtcars$am,labels=c('Automatic','Manual'))
summary(mtcars)
fit1 <- lm(mpg ~ am, data = mtcars)
summary(fit1)
all_fit <- lm(mpg ~ .-qsec, data = mtcars)
summary(all_fit)
plot(mtcars)
?aov
aov <- aov(mpg~.-qsec, data=mtcars)
library(xtable)
?xtable
print(xtable(aov))
print(aov)
summary(aov)
?aov
cor(mtcars)
cor(as.numeric(mtcars))
data(mtcars)
cor(mtcars)
all_fit <- aov(mpg ~ .-qsec, data = mtcars)
summary(all_fit)
cor(mtcars)
c[upper.tri(c)]<-NA
c<-cor(mtcars)
c[upper.tri(c)]<-NA
c
xtable(c)
fit1 <- lm(mpg ~ cyl, data=mtcars)
fit2 <- lm(mpg ~ wt, data = mtcars)
fit3 <- lm(mpg ~ cyl + wt, data = mtcars)
fit4 <- lm(mpg ~ disp, data = mtcars)
fit5 <- lm(mpg ~ disp + cyl, data = mtcars)
fit6 <- lm(mpg ~ disp + cyl + wt, data = mtcars)
summary(fit1)$adj.r.squared
summary(fit2)$adj.r.squared
fit7 <- lm(mpg ~ disp + cyl + wt + am, data = mtcars)
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs, labels=c("V-engine", "Straight engine"))
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
mtcars$am <- factor(mtcars$am,labels=c('Automatic','Manual'))
all_fit <- aov(mpg ~ .-qsec, data = mtcars)
print(xtable(all_fit), type="html")
summary(all_fit)
?cor
fit1 <- lm(mpg ~ cyl, data=mtcars)
fit2 <- lm(mpg ~ wt, data = mtcars)
fit3 <- lm(mpg ~ cyl + wt, data = mtcars)
fit4 <- lm(mpg ~ disp, data = mtcars)
fit5 <- lm(mpg ~ disp + cyl, data = mtcars)
fit6 <- lm(mpg ~ disp + cyl + wt, data = mtcars)
summary(fit1)$adj.r.squared
summary(fit2)$adj.r.squared
summary(fit3)$adj.r.squared
summary(fit4)$adj.r.squared
summary(fit5)$adj.r.squared
summary(fit6)$adj.r.squared
summary(fit7)$adj.r.squared
summary(fit8)$adj.r.squared
fit7
fit6
fit7 <- lm(mpg ~ cyl + wt +am, data = mtcars)
summary(fit3)$adj.r.squared
summary(fit7)$adj.r.squared
?print
all_fit <- aov(mpg ~ .-qsec, data = mtcars)
summary(all_fit)
?xtable
?print
??xtable
library(xtable)
?xtable
cor <- cor(mtcars)
cor[upper.tri(cor)] <- NA
cor
install.packages(c("caret", "caretEnsemble"))
install.packages(c("caTools", "dotCall64", "e1071", "fansi", "foreign", "kernlab", "lme4", "openssl", "pkgconfig", "Rcpp", "RcppArmadillo", "rlang", "scales", "spData", "XML", "xpose", "xts", "yaml"))
